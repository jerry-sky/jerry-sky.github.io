
@keyframes bg-movement-one {
    0% {
        transform: rotate(45deg) translate(0, 150vh, 0);
    }
    100% {
        transform: rotate(45deg) translate(0, -150vh, 0);
    }
}

@keyframes bg-movement-two {
    0% {
        transform: rotate(45deg) translate(0, 0vh, 0);
    }
    50% {
        transform: rotate(45deg) translate(0, -150vh, 0);
        opacity: 1;
    }
    51% {
        transform: rotate(45deg) translate(0, -150vh, 0);
        opacity: 0;
    }
    52% {
        transform: rotate(45deg) translate(0, 150vh, 0);
        opacity: 0;
    }
    53% {
        transform: rotate(45deg) translate(0, 150vh, 0);
        opacity: 1;
    }
    100% {
        transform: rotate(45deg) translate(0, 0vh, 0);
    }
}

.background {
    position: fixed;
    left: -25vh;
    top: -25vh;
    z-index: -1;
    width: 150vw;
    height: 150vh;
    animation-name: bg-movement-one;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
    transform-origin: center center;

    // the other copy of those three layers need to be offset
    &.two {
        animation-name: bg-movement-two;
    }

    // for now the animations are disabled due to performance issues
    animation: none;
    transform: rotate(45deg);

    .background-particle {
        position: relative;
        display: inline-block;
        z-index: -1;
    }

    @mixin background-particle($girth, $length, $colour) {
        width: $girth;
        height: $length;
        // background-color: $colour;
        box-shadow: inset 0 $length ($length / 2) ($length * -3 / 4) $colour;
    }

    // every layer can have its own shade of the base colour
    $base-colour: rgba(255,255,255, 0.05);
    $slow-colour: fade-in($base-colour, 0);
    $medium-colour: fade-in($base-colour, 0);
    $fast-colour: fade-in($base-colour, 0);

    $particle-quantity: 50;

    &.slow {
        animation-duration: 400s;

        & > .background-particle {
            @include background-particle(10px, 64px, $slow-colour);
        }
    }
    &.medium {
        animation-duration: 200s;

        & > .background-particle {
            @include background-particle(6px, 48px, $medium-colour);
        }
    }
    &.fast {
        animation-duration: 100s;

        & > .background-particle {
            @include background-particle(4px, 32px, $fast-colour);
        }
    }
    @each $speed in slow, medium, fast {
        @for $i from 1 through $particle-quantity {
            &.#{$speed} > .background-particle:nth-child(#{$i}) {
                top: random(100) * 1%;
                left: random(100) * 1%;
            }
        }
    }
}
